/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Comentario.java
 *
 * Created on 30/07/2009, 01:37:53 PM
 */

package view;

import control.Consultas;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;

import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;

import javax.swing.JTextArea;
import model.ComentarioBean;
import model.Contacto;
import model.InfoEmpresa;
import model.InfoTipoContacto;

/**
 *
 * @author INTAPSA
 */
public class Comentario extends javax.swing.JPanel {
   private MainWindow mw;
   private Object target;
   private Consultas con;
   private boolean inEdition;
   private String lastEdition;
   private ComentarioBean coment;
  

    /** Creates new form Comentario */
   

    public Comentario(MainWindow mw, Object target,ComentarioBean comment) {
        initComponents();
        this.coment = comment;
        lastEdition = new String();
        this.target = target;
        con= mw.getB().getCon();
        texto.setWrapStyleWord(true);
        texto.setLineWrap(true);
        
    }


    public void añadirComentario(String text){
       
           texto.setText(text);
           lastEdition = texto.getText();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comentario = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());

        comentario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comentarioMouseClicked(evt);
            }
        });

        texto.setColumns(20);
        texto.setEditable(false);
        texto.setRows(5);
        texto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textoMouseClicked(evt);
            }
        });
        texto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textoKeyPressed(evt);
            }
        });
        comentario.setViewportView(texto);

        add(comentario, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void comentarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comentarioMouseClicked
        // TODO add your handling code here:
       

    }//GEN-LAST:event_comentarioMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
         
    }//GEN-LAST:event_formMouseClicked

    private void textoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoMouseClicked
        // TODO add your handling code here:
        if(MouseEvent.BUTTON3 == evt.getButton()){
            JPopupMenu menu = new JPopupMenu();
            JMenuItem edit = new JMenuItem("Editar");
            JMenuItem elim = new JMenuItem("Eliminar");
            menu.add(edit);
            menu.add(elim);
            menu.show(texto, evt.getX(), evt.getY());
            edit.addActionListener(new ActionListener() {

                public void actionPerformed(ActionEvent e) {
                    texto.setEditable(true);
                    texto.requestFocus();
                    manejoEditar();
                }
            });

            elim.addActionListener(new ActionListener() {

                public void actionPerformed(ActionEvent e) {
                    manejoEliminar();
                }
            });
        }
    }//GEN-LAST:event_textoMouseClicked

    private void textoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoKeyPressed
        // TODO add your handling code here:
         if(texto.isEditable() && evt.getKeyCode()== KeyEvent.VK_ENTER){
            String probablyNewComment = texto.getText();
            if(!lastEdition.equals(probablyNewComment)){
                 if(target instanceof InfoEmpresa){
                InfoEmpresa empresa = (InfoEmpresa)target;
                if(!con.editComentario(-1, empresa.getId_empresa(), empresa.getId_tipo(),probablyNewComment,coment.getPk())){

                     JOptionPane.showMessageDialog(this, "Upss, Error al salvar comentario.  Inténtalo nuevamente");
                }else{
                    texto.setEditable(false);
                }


            }else if(target instanceof InfoTipoContacto){
                InfoTipoContacto tipo = (InfoTipoContacto)target;
                if(!con.editComentario(-1,-1, tipo.getPK(),probablyNewComment,coment.getPk())){

                    JOptionPane.showMessageDialog(this, "Upss, Error al salvar comentario.  Inténtalo nuevamente");
                }else{
                    texto.setEditable(false);
                }


            }else if(target instanceof Contacto){
                Contacto contacto = (Contacto) target;
                if(!con.editComentario(contacto.getPK(), contacto.getId_empresa(), -1,probablyNewComment,coment.getPk())){

                    JOptionPane.showMessageDialog(this, "Upss, Error al salvar comentario.  Inténtalo nuevamente");
                }else{
                    texto.setEditable(false);
                }

            }
            }

        }
    }//GEN-LAST:event_textoKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane comentario;
    private javax.swing.JTextArea texto;
    // End of variables declaration//GEN-END:variables


    private void manejoEliminar(){

        int r = JOptionPane.showConfirmDialog(null, "Confirma que deseas eliminar este comentario", "Eliminar comentario", JOptionPane.YES_NO_OPTION);
        if(r == JOptionPane.YES_OPTION){
            if(target instanceof InfoEmpresa){
                InfoEmpresa empresa = (InfoEmpresa)target;
                if(!con.deleteComment(-1, empresa.getId_empresa(), empresa.getId_tipo())){

                     JOptionPane.showMessageDialog(this, "Upss, Error al eliminar comentario.  Inténtalo nuevamente");
                }else{
                    setVisible(false);
                }


            }else if(target instanceof InfoTipoContacto){
                InfoTipoContacto tipo = (InfoTipoContacto)target;
                if(!con.deleteComment(-1,-1, tipo.getPK())){

                    JOptionPane.showMessageDialog(this, "Upss, Error al eliminar comentario.  Inténtalo nuevamente");
                }else{
                    setVisible(false);
                }


            }else if(target instanceof Contacto){
                Contacto contacto = (Contacto) target;
                if(!con.deleteComment(contacto.getPK(), contacto.getId_empresa(), -1)){

                    JOptionPane.showMessageDialog(this, "Upss, Error al eliminar comentario.  Inténtalo nuevamente");
                }else{
                    setVisible(false);
                }
                
            }

        }
    }
    private void manejoEditar(){
         texto.setEditable(true);
         lastEdition = texto.getText();

    }
}

class KeyTextArea{
    private JTextArea text;
    private Consultas con;

    public KeyTextArea(JTextArea text, Consultas con) {
        this.text = text;
        this.con = con;
        text.addKeyListener(new KeyAdapter() {

            @Override
            public void keyPressed(KeyEvent e) {
                super.keyPressed(e);
                if(e.getKeyCode() == KeyEvent.VK_ENTER){
                    
                }
            }


        });


    }

}
